{"id":"../node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js.map","includedInParent":true,"mtime":1733074798686},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/package.json","includedInParent":true,"mtime":1733074798686},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37,"index":52},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/regenerator","loc":{"line":10,"column":50,"index":250},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/node_modules/@babel/runtime/regenerator/index.js"},{"name":"@babel/runtime/helpers/defineProperty","loc":{"line":12,"column":54,"index":337},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/node_modules/@babel/runtime/helpers/defineProperty.js"},{"name":"@babel/runtime/helpers/asyncToGenerator","loc":{"line":14,"column":56,"index":437},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/node_modules/@babel/runtime/helpers/asyncToGenerator.js"},{"name":"@babel/runtime/helpers/objectWithoutProperties","loc":{"line":16,"column":63,"index":546},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/node_modules/@babel/runtime/helpers/objectWithoutProperties.js"},{"name":"./resolveFunctionOrReturnValue","loc":{"line":18,"column":67,"index":666},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/patchOptions.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/web-speech-cognitive-services/lib/SpeechServices/resolveFunctionOrReturnValue.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = patchOptions;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _resolveFunctionOrReturnValue = _interopRequireDefault(require(\"./resolveFunctionOrReturnValue\"));\n\nvar _excluded = [\"authorizationToken\", \"credentials\", \"looseEvent\", \"looseEvents\", \"region\", \"subscriptionKey\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar shouldWarnOnSubscriptionKey = true;\n\nfunction patchOptions() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var authorizationToken = _ref.authorizationToken,\n      credentials = _ref.credentials,\n      looseEvent = _ref.looseEvent,\n      looseEvents = _ref.looseEvents,\n      _ref$region = _ref.region,\n      region = _ref$region === void 0 ? 'westus' : _ref$region,\n      subscriptionKey = _ref.subscriptionKey,\n      otherOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  if (typeof looseEvent !== 'undefined') {\n    console.warn('web-speech-cognitive-services: The option \"looseEvent\" should be named as \"looseEvents\".');\n    looseEvents = looseEvent;\n  }\n\n  if (!credentials) {\n    if (!authorizationToken && !subscriptionKey) {\n      throw new Error('web-speech-cognitive-services: Credentials must be specified.');\n    } else {\n      console.warn('web-speech-cognitive-services: We are deprecating authorizationToken, region, and subscriptionKey. Please use credentials instead. The deprecated option will be removed on or after 2020-11-14.');\n\n      credentials = /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n          return _regenerator.default.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!authorizationToken) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return (0, _resolveFunctionOrReturnValue.default)(authorizationToken);\n\n                case 3:\n                  _context.t1 = _context.sent;\n                  _context.t2 = region;\n                  _context.t0 = {\n                    authorizationToken: _context.t1,\n                    region: _context.t2\n                  };\n                  _context.next = 13;\n                  break;\n\n                case 8:\n                  _context.t3 = region;\n                  _context.next = 11;\n                  return (0, _resolveFunctionOrReturnValue.default)(subscriptionKey);\n\n                case 11:\n                  _context.t4 = _context.sent;\n                  _context.t0 = {\n                    region: _context.t3,\n                    subscriptionKey: _context.t4\n                  };\n\n                case 13:\n                  return _context.abrupt(\"return\", _context.t0);\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function credentials() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, otherOptions), {}, {\n    fetchCredentials: function () {\n      var _fetchCredentials = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n        var _yield$resolveFunctio, authorizationToken, customVoiceHostname, region, speechRecognitionHostname, speechSynthesisHostname, subscriptionKey, resolvedCredentials;\n\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _resolveFunctionOrReturnValue.default)(credentials);\n\n              case 2:\n                _yield$resolveFunctio = _context2.sent;\n                authorizationToken = _yield$resolveFunctio.authorizationToken;\n                customVoiceHostname = _yield$resolveFunctio.customVoiceHostname;\n                region = _yield$resolveFunctio.region;\n                speechRecognitionHostname = _yield$resolveFunctio.speechRecognitionHostname;\n                speechSynthesisHostname = _yield$resolveFunctio.speechSynthesisHostname;\n                subscriptionKey = _yield$resolveFunctio.subscriptionKey;\n\n                if (!(!authorizationToken && !subscriptionKey || authorizationToken && subscriptionKey)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                throw new Error('web-speech-cognitive-services: Either \"authorizationToken\" or \"subscriptionKey\" must be provided.');\n\n              case 13:\n                if (!(!region && !(speechRecognitionHostname && speechSynthesisHostname))) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                throw new Error('web-speech-cognitive-services: Either \"region\" or \"speechRecognitionHostname\" and \"speechSynthesisHostname\" must be set.');\n\n              case 17:\n                if (!(region && (customVoiceHostname || speechRecognitionHostname || speechSynthesisHostname))) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                throw new Error('web-speech-cognitive-services: Only either \"region\" or \"customVoiceHostname\", \"speechRecognitionHostname\" and \"speechSynthesisHostname\" can be set.');\n\n              case 21:\n                if (!authorizationToken) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                if (!(typeof authorizationToken !== 'string')) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                throw new Error('web-speech-cognitive-services: \"authorizationToken\" must be a string.');\n\n              case 24:\n                _context2.next = 28;\n                break;\n\n              case 26:\n                if (!(typeof subscriptionKey !== 'string')) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                throw new Error('web-speech-cognitive-services: \"subscriptionKey\" must be a string.');\n\n              case 28:\n                if (shouldWarnOnSubscriptionKey && subscriptionKey) {\n                  console.warn('web-speech-cognitive-services: In production environment, subscription key should not be used, authorization token should be used instead.');\n                  shouldWarnOnSubscriptionKey = false;\n                }\n\n                resolvedCredentials = authorizationToken ? {\n                  authorizationToken: authorizationToken\n                } : {\n                  subscriptionKey: subscriptionKey\n                };\n\n                if (region) {\n                  resolvedCredentials.region = region;\n                } else {\n                  resolvedCredentials.customVoiceHostname = customVoiceHostname;\n                  resolvedCredentials.speechRecognitionHostname = speechRecognitionHostname;\n                  resolvedCredentials.speechSynthesisHostname = speechSynthesisHostname;\n                }\n\n                return _context2.abrupt(\"return\", resolvedCredentials);\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fetchCredentials() {\n        return _fetchCredentials.apply(this, arguments);\n      }\n\n      return fetchCredentials;\n    }(),\n    looseEvents: looseEvents\n  });\n}\n"},"sourceMaps":{"js":{"version":3,"file":"patchOptions.js","names":["shouldWarnOnSubscriptionKey","patchOptions","authorizationToken","credentials","looseEvent","looseEvents","region","subscriptionKey","otherOptions","console","warn","Error","resolveFunctionOrReturnValue","fetchCredentials","customVoiceHostname","speechRecognitionHostname","speechSynthesisHostname","resolvedCredentials"],"sources":["../../src/SpeechServices/patchOptions.js"],"sourcesContent":["import resolveFunctionOrReturnValue from './resolveFunctionOrReturnValue';\n\nlet shouldWarnOnSubscriptionKey = true;\n\nexport default function patchOptions({\n  authorizationToken,\n  credentials,\n  looseEvent,\n  looseEvents,\n  region = 'westus',\n  subscriptionKey,\n  ...otherOptions\n} = {}) {\n  if (typeof looseEvent !== 'undefined') {\n    console.warn('web-speech-cognitive-services: The option \"looseEvent\" should be named as \"looseEvents\".');\n\n    looseEvents = looseEvent;\n  }\n\n  if (!credentials) {\n    if (!authorizationToken && !subscriptionKey) {\n      throw new Error('web-speech-cognitive-services: Credentials must be specified.');\n    } else {\n      console.warn(\n        'web-speech-cognitive-services: We are deprecating authorizationToken, region, and subscriptionKey. Please use credentials instead. The deprecated option will be removed on or after 2020-11-14.'\n      );\n\n      credentials = async () =>\n        authorizationToken\n          ? { authorizationToken: await resolveFunctionOrReturnValue(authorizationToken), region }\n          : { region, subscriptionKey: await resolveFunctionOrReturnValue(subscriptionKey) };\n    }\n  }\n\n  return {\n    ...otherOptions,\n    fetchCredentials: async () => {\n      const {\n        authorizationToken,\n        customVoiceHostname,\n        region,\n        speechRecognitionHostname,\n        speechSynthesisHostname,\n        subscriptionKey\n      } = await resolveFunctionOrReturnValue(credentials);\n\n      if ((!authorizationToken && !subscriptionKey) || (authorizationToken && subscriptionKey)) {\n        throw new Error(\n          'web-speech-cognitive-services: Either \"authorizationToken\" or \"subscriptionKey\" must be provided.'\n        );\n      } else if (!region && !(speechRecognitionHostname && speechSynthesisHostname)) {\n        throw new Error(\n          'web-speech-cognitive-services: Either \"region\" or \"speechRecognitionHostname\" and \"speechSynthesisHostname\" must be set.'\n        );\n      } else if (region && (customVoiceHostname || speechRecognitionHostname || speechSynthesisHostname)) {\n        throw new Error(\n          'web-speech-cognitive-services: Only either \"region\" or \"customVoiceHostname\", \"speechRecognitionHostname\" and \"speechSynthesisHostname\" can be set.'\n        );\n      } else if (authorizationToken) {\n        if (typeof authorizationToken !== 'string') {\n          throw new Error('web-speech-cognitive-services: \"authorizationToken\" must be a string.');\n        }\n      } else if (typeof subscriptionKey !== 'string') {\n        throw new Error('web-speech-cognitive-services: \"subscriptionKey\" must be a string.');\n      }\n\n      if (shouldWarnOnSubscriptionKey && subscriptionKey) {\n        console.warn(\n          'web-speech-cognitive-services: In production environment, subscription key should not be used, authorization token should be used instead.'\n        );\n\n        shouldWarnOnSubscriptionKey = false;\n      }\n\n      const resolvedCredentials = authorizationToken ? { authorizationToken } : { subscriptionKey };\n\n      if (region) {\n        resolvedCredentials.region = region;\n      } else {\n        resolvedCredentials.customVoiceHostname = customVoiceHostname;\n        resolvedCredentials.speechRecognitionHostname = speechRecognitionHostname;\n        resolvedCredentials.speechSynthesisHostname = speechSynthesisHostname;\n      }\n\n      return resolvedCredentials;\n    },\n    looseEvents\n  };\n}\n"],"mappings":"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"}},"error":null,"hash":"1eb7ec7a0a26fdce64e44432d0ebf082","cacheData":{"env":{}}}