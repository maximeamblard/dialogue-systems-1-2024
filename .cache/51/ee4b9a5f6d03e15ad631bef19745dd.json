{"id":"../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js.map","includedInParent":true,"mtime":1733074701821},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/package.json","includedInParent":true,"mtime":1733074701821},{"name":"../../common.browser/RestConfigBase","loc":{"line":19,"column":31,"index":837},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js"}],"generated":{"js":"\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionConfig = void 0;\nvar RestConfigBase_1 = require(\"../../common.browser/RestConfigBase\");\nvar ConversationConnectionConfig = /** @class */ (function (_super) {\n    __extends(ConversationConnectionConfig, _super);\n    function ConversationConnectionConfig() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ConversationConnectionConfig, \"host\", {\n        get: function () {\n            return ConversationConnectionConfig.privHost;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"apiVersion\", {\n        get: function () {\n            return ConversationConnectionConfig.privApiVersion;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"clientAppId\", {\n        get: function () {\n            return ConversationConnectionConfig.privClientAppId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"defaultLanguageCode\", {\n        get: function () {\n            return ConversationConnectionConfig.privDefaultLanguageCode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"restPath\", {\n        get: function () {\n            return ConversationConnectionConfig.privRestPath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"webSocketPath\", {\n        get: function () {\n            return ConversationConnectionConfig.privWebSocketPath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"speechHost\", {\n        get: function () {\n            return ConversationConnectionConfig.privSpeechHost;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"speechPath\", {\n        get: function () {\n            return ConversationConnectionConfig.privSpeechPath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationConnectionConfig, \"transcriptionEventKeys\", {\n        get: function () {\n            return ConversationConnectionConfig.privTranscriptionEventKeys;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\n    ConversationConnectionConfig.privRestPath = \"/capito/room\";\n    ConversationConnectionConfig.privApiVersion = \"2.0\";\n    ConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\n    ConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\n    ConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\n    ConversationConnectionConfig.privSpeechHost = \"{region}.s2s.speech.microsoft.com\";\n    ConversationConnectionConfig.privSpeechPath = \"/speech/translation/cognitiveservices/v1\";\n    ConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n    return ConversationConnectionConfig;\n}(RestConfigBase_1.RestConfigBase));\nexports.ConversationConnectionConfig = ConversationConnectionConfig;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["src/common.speech/Transcription/ConversationConnectionConfig.ts"],"names":[],"mappings":";AACA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;AAElC,sEAE6C;AAE7C;IAAkD,gDAAc;IAAhE;;IA+CA,CAAC;IAnCG,sBAAkB,oCAAI;aAAtB;YACI,OAAO,4BAA4B,CAAC,QAAQ,CAAC;QACjD,CAAC;;;OAAA;IAED,sBAAkB,0CAAU;aAA5B;YACI,OAAO,4BAA4B,CAAC,cAAc,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAkB,2CAAW;aAA7B;YACI,OAAO,4BAA4B,CAAC,eAAe,CAAC;QACxD,CAAC;;;OAAA;IAED,sBAAkB,mDAAmB;aAArC;YACI,OAAO,4BAA4B,CAAC,uBAAuB,CAAC;QAChE,CAAC;;;OAAA;IAED,sBAAkB,wCAAQ;aAA1B;YACI,OAAO,4BAA4B,CAAC,YAAY,CAAC;QACrD,CAAC;;;OAAA;IAED,sBAAkB,6CAAa;aAA/B;YACI,OAAO,4BAA4B,CAAC,iBAAiB,CAAC;QAC1D,CAAC;;;OAAA;IAED,sBAAkB,0CAAU;aAA5B;YACI,OAAO,4BAA4B,CAAC,cAAc,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAkB,0CAAU;aAA5B;YACI,OAAO,4BAA4B,CAAC,cAAc,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAkB,sDAAsB;aAAxC;YACI,OAAO,4BAA4B,CAAC,0BAA0B,CAAC;QACnE,CAAC;;;OAAA;IA5CuB,qCAAQ,GAAW,6BAA6B,CAAC;IACjD,yCAAY,GAAW,cAAc,CAAC;IACtC,2CAAc,GAAW,KAAK,CAAC;IAC/B,oDAAuB,GAAW,OAAO,CAAC;IAC1C,4CAAe,GAAW,sCAAsC,CAAC;IACjE,8CAAiB,GAAW,mBAAmB,CAAC;IAChD,2CAAc,GAAW,mCAAmC,CAAC;IAC7D,2CAAc,GAAW,0CAA0C,CAAC;IACpE,uDAA0B,GAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,4BAA4B,EAAE,gBAAgB,EAAE,UAAU,EAAE,cAAc,EAAE,mBAAmB,EAAE,WAAW,CAAC,CAAC;IAqCrO,mCAAC;CA/CD,AA+CC,CA/CiD,+BAAc,GA+C/D;AA/CY,oEAA4B","file":"ConversationConnectionConfig.js","sourcesContent":["\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privSpeechHost: string = \"{region}.s2s.speech.microsoft.com\";\r\n    private static readonly privSpeechPath: string = \"/speech/translation/cognitiveservices/v1\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get speechHost(): string {\r\n        return ConversationConnectionConfig.privSpeechHost;\r\n    }\r\n\r\n    public static get speechPath(): string {\r\n        return ConversationConnectionConfig.privSpeechPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n"]}},"error":null,"hash":"13b2c91be8a7b958b86067fd3c825d0e","cacheData":{"env":{}}}