{"id":"../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js.map","includedInParent":true,"mtime":1733074701821},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/package.json","includedInParent":true,"mtime":1733074701821},{"name":"./Contracts","loc":{"line":6,"column":26,"index":247},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js"},{"name":"./Exports","loc":{"line":7,"column":24,"index":287},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js"}],"generated":{"js":"\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentConfig = void 0;\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_1 = require(\"./Exports\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\nvar PronunciationAssessmentConfig = /** @class */ (function () {\n    /**\n     * PronunciationAssessmentConfig constructor.\n     * @constructor\n     * @param {string} referenceText\n     * @param gradingSystem\n     * @param granularity\n     * @param enableMiscue\n     */\n    function PronunciationAssessmentConfig(referenceText, gradingSystem, granularity, enableMiscue) {\n        if (gradingSystem === void 0) { gradingSystem = Exports_1.PronunciationAssessmentGradingSystem.FivePoint; }\n        if (granularity === void 0) { granularity = Exports_1.PronunciationAssessmentGranularity.Phoneme; }\n        if (enableMiscue === void 0) { enableMiscue = false; }\n        Contracts_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n        this.privProperties = new Exports_1.PropertyCollection();\n        this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n        this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n        this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity, Exports_1.PronunciationAssessmentGranularity[granularity]);\n        this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n    }\n    /**\n     * @member PronunciationAssessmentConfig.fromJSON\n     * @function\n     * @public\n     * @param {string} json The json string containing the pronunciation assessment parameters.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n     */\n    PronunciationAssessmentConfig.fromJSON = function (json) {\n        Contracts_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        var config = new PronunciationAssessmentConfig(\"\");\n        config.privProperties = new Exports_1.PropertyCollection();\n        config.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Json, json);\n        return config;\n    };\n    PronunciationAssessmentConfig.prototype.toJSON = function () {\n        this.updateJson();\n        return this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params);\n    };\n    PronunciationAssessmentConfig.prototype.applyTo = function (recognizer) {\n        this.updateJson();\n        var recoBase = recognizer.internalData;\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params));\n    };\n    Object.defineProperty(PronunciationAssessmentConfig.prototype, \"referenceText\", {\n        /**\n         * Gets the reference text.\n         * @member PronunciationAssessmentConfig.prototype.referenceText\n         * @function\n         * @public\n         * @returns {string} Reference text.\n         */\n        get: function () {\n            return this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n        },\n        /**\n         * Gets/Sets the reference text.\n         * @member PronunciationAssessmentConfig.prototype.referenceText\n         * @function\n         * @public\n         * @param {string} referenceText - Reference text.\n         */\n        set: function (referenceText) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n            this.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PronunciationAssessmentConfig.prototype, \"phonemeAlphabet\", {\n        /**\n         * Sets the phoneme alphabet.\n         * The valid values are \"SAPI\" (default) and \"IPA\".\n         * Added in version 1.20.0\n         * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\n         * @function\n         * @public\n         * @param {string} phonemeAlphabet - Phoneme alphabet.\n         */\n        set: function (phonemeAlphabet) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\n            this.privPhonemeAlphabet = phonemeAlphabet;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PronunciationAssessmentConfig.prototype, \"nbestPhonemeCount\", {\n        /**\n         * Sets the nbest phoneme count\n         * Added in version 1.20.0\n         * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\n         * @function\n         * @public\n         * @param {number} nbestPhonemeCount - NBest phoneme count.\n         */\n        set: function (nbestPhonemeCount) {\n            this.privNBestPhonemeCount = nbestPhonemeCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PronunciationAssessmentConfig.prototype, \"properties\", {\n        /**\n         * @member PronunciationAssessmentConfig.prototype.properties\n         * @function\n         * @public\n         * @return {PropertyCollection} Properties of the config.\n         * @summary Gets a pronunciation assessment config properties\n         */\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PronunciationAssessmentConfig.prototype.updateJson = function () {\n        var jsonString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n        var paramsJson = JSON.parse(jsonString);\n        var referenceText = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n        if (referenceText) {\n            paramsJson.referenceText = referenceText;\n        }\n        var gradingSystem = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem);\n        if (gradingSystem) {\n            paramsJson.gradingSystem = gradingSystem;\n        }\n        var granularity = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity);\n        if (granularity) {\n            paramsJson.granularity = granularity;\n        }\n        if (this.privPhonemeAlphabet) {\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\n        }\n        if (this.privNBestPhonemeCount) {\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\n        }\n        // always set dimension to Comprehensive\n        paramsJson.dimension = \"Comprehensive\";\n        var enableMiscueString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue);\n        if (enableMiscueString === \"true\") {\n            paramsJson.enableMiscue = true;\n        }\n        else if (enableMiscueString === \"false\") {\n            paramsJson.enableMiscue = false;\n        }\n        this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n    };\n    return PronunciationAssessmentConfig;\n}());\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["src/sdk/PronunciationAssessmentConfig.ts"],"names":[],"mappings":"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","file":"PronunciationAssessmentConfig.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\ninterface PronunciationAssessmentJSON {\r\n    referenceText: string;\r\n    gradingSystem: string;\r\n    granularity: string;\r\n    phonemeAlphabet: string;\r\n    nbestPhonemeCount: number;\r\n    dimension: string;\r\n    enableMiscue: boolean;\r\n}\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privPhonemeAlphabet: string;\r\n    private privNBestPhonemeCount: number;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * Sets the phoneme alphabet.\r\n     * The valid values are \"SAPI\" (default) and \"IPA\".\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\r\n     * @function\r\n     * @public\r\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\r\n     */\r\n    public set phonemeAlphabet(phonemeAlphabet: string) {\r\n        Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\r\n        this.privPhonemeAlphabet = phonemeAlphabet;\r\n    }\r\n\r\n    /**\r\n     * Sets the nbest phoneme count\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\r\n     * @function\r\n     * @public\r\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\r\n     */\r\n    public set nbestPhonemeCount(nbestPhonemeCount: number) {\r\n        this.privNBestPhonemeCount = nbestPhonemeCount;\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson: PronunciationAssessmentJSON = JSON.parse(jsonString) as PronunciationAssessmentJSON;\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        if (this.privPhonemeAlphabet) {\r\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\r\n        }\r\n\r\n        if (this.privNBestPhonemeCount) {\r\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n"]}},"error":null,"hash":"9e00323da9e9f2c46fbe1de351494177","cacheData":{"env":{}}}