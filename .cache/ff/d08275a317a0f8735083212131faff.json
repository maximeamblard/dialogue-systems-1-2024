{"id":"../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js.map","includedInParent":true,"mtime":1733074701821},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/package.json","includedInParent":true,"mtime":1733074701821},{"name":"../../common/Exports","loc":{"line":55,"column":24,"index":3295},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js"},{"name":"../../sdk/Contracts","loc":{"line":56,"column":26,"index":3346},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js"},{"name":"../../sdk/Exports","loc":{"line":57,"column":24,"index":3394},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js"},{"name":"../Exports","loc":{"line":58,"column":24,"index":3440},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js"}],"generated":{"js":"\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriberRecognizer = void 0;\nvar Exports_1 = require(\"../../common/Exports\");\nvar Contracts_1 = require(\"../../sdk/Contracts\");\nvar Exports_2 = require(\"../../sdk/Exports\");\nvar Exports_3 = require(\"../Exports\");\nvar TranscriberRecognizer = /** @class */ (function (_super) {\n    __extends(TranscriberRecognizer, _super);\n    /**\n     * TranscriberRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\n     */\n    function TranscriberRecognizer(speechTranslationConfig, audioConfig) {\n        var _this = this;\n        var speechTranslationConfigImpl = speechTranslationConfig;\n        Contracts_1.Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n        var audioConfigImpl = audioConfig;\n        Contracts_1.Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        _this = _super.call(this, audioConfig, speechTranslationConfigImpl.properties, new Exports_3.TranscriberConnectionFactory()) || this;\n        _this.privDisposedRecognizer = false;\n        return _this;\n    }\n    Object.defineProperty(TranscriberRecognizer.prototype, \"speechRecognitionLanguage\", {\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TranscriberRecognizer.prototype, \"properties\", {\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TranscriberRecognizer.prototype, \"authorizationToken\", {\n        get: function () {\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n        },\n        set: function (token) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, token);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TranscriberRecognizer.prototype, \"conversation\", {\n        set: function (c) {\n            Contracts_1.Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n            this.privConversation = c;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TranscriberRecognizer.prototype.getConversationInfo = function () {\n        Contracts_1.Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n        return this.privConversation.conversationInfo;\n    };\n    TranscriberRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n        Exports_1.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_3.RecognitionMode.Conversation), cb, err);\n    };\n    TranscriberRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n        Exports_1.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    };\n    TranscriberRecognizer.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.privDisposedRecognizer) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.dispose(true)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Push async join/leave conversation message via serviceRecognizer\n    TranscriberRecognizer.prototype.pushConversationEvent = function (conversationInfo, command) {\n        return __awaiter(this, void 0, void 0, function () {\n            var reco;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        reco = (this.privReco);\n                        Contracts_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n                        return [4 /*yield*/, reco.sendSpeechEventAsync(conversationInfo, command)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    TranscriberRecognizer.prototype.enforceAudioGating = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var audioConfigImpl, format, channels;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        audioConfigImpl = this.audioConfig;\n                        return [4 /*yield*/, audioConfigImpl.format];\n                    case 1:\n                        format = _a.sent();\n                        channels = format.channels;\n                        if (channels === 1) {\n                            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\n                                throw new Error(\"Single channel audio configuration for ConversationTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\n                            }\n                        }\n                        else if (channels !== 8) {\n                            throw new Error(\"Unsupported audio configuration: Detected \" + channels + \"-channel audio\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    TranscriberRecognizer.prototype.connectCallbacks = function (transcriber) {\n        this.canceled = function (s, e) {\n            if (!!transcriber.canceled) {\n                transcriber.canceled(transcriber, e);\n            }\n        };\n        this.recognizing = function (s, e) {\n            if (!!transcriber.transcribing) {\n                transcriber.transcribing(transcriber, e);\n            }\n        };\n        this.recognized = function (s, e) {\n            if (!!transcriber.transcribed) {\n                transcriber.transcribed(transcriber, e);\n            }\n        };\n        this.sessionStarted = function (s, e) {\n            if (!!transcriber.sessionStarted) {\n                transcriber.sessionStarted(transcriber, e);\n            }\n        };\n        this.sessionStopped = function (s, e) {\n            if (!!transcriber.sessionStopped) {\n                transcriber.sessionStopped(transcriber, e);\n            }\n        };\n    };\n    TranscriberRecognizer.prototype.disconnectCallbacks = function () {\n        this.canceled = undefined;\n        this.recognizing = undefined;\n        this.recognized = undefined;\n        this.sessionStarted = undefined;\n        this.sessionStopped = undefined;\n    };\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    TranscriberRecognizer.prototype.dispose = function (disposing) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.privDisposedRecognizer) {\n                            return [2 /*return*/];\n                        }\n                        if (!disposing) return [3 /*break*/, 2];\n                        this.privDisposedRecognizer = true;\n                        return [4 /*yield*/, this.implRecognizerStop()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, _super.prototype.dispose.call(this, disposing)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    TranscriberRecognizer.prototype.createRecognizerConfig = function (speechConfig) {\n        return new Exports_3.RecognizerConfig(speechConfig, this.properties);\n    };\n    TranscriberRecognizer.prototype.createServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n        var configImpl = audioConfig;\n        return new Exports_3.TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    };\n    return TranscriberRecognizer;\n}(Exports_2.Recognizer));\nexports.TranscriberRecognizer = TranscriberRecognizer;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["src/common.speech/Transcription/TranscriberRecognizer.ts"],"names":[],"mappings":"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","file":"TranscriberRecognizer.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { AudioStreamFormatImpl } from \"../../sdk/Audio/AudioStreamFormat\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    ConversationTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        const audioConfigImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        if (!this.privDisposedRecognizer) {\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    public async enforceAudioGating(): Promise<void> {\r\n        const audioConfigImpl = this.audioConfig as AudioConfigImpl;\r\n        const format: AudioStreamFormatImpl = await audioConfigImpl.format;\r\n        const channels = format.channels;\r\n        if (channels === 1) {\r\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\r\n                throw new Error(\"Single channel audio configuration for ConversationTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\r\n            }\r\n        } else if (channels !== 8) {\r\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    public connectCallbacks(transcriber: ConversationTranscriber): void {\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n"]}},"error":null,"hash":"cf42622d273eba7ec65379fd1edc0e21","cacheData":{"env":{}}}