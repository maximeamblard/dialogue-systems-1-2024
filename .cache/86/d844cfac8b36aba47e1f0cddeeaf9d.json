{"id":"../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js.map","includedInParent":true,"mtime":1733074701821},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/package.json","includedInParent":true,"mtime":1733074701821},{"name":"./ConnectionMessage","loc":{"line":7,"column":34,"index":306},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js"},{"name":"./Error","loc":{"line":8,"column":22,"index":352},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js"},{"name":"./Guid","loc":{"line":9,"column":21,"index":385},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js"}],"generated":{"js":"\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawWebsocketMessage = void 0;\nvar ConnectionMessage_1 = require(\"./ConnectionMessage\");\nvar Error_1 = require(\"./Error\");\nvar Guid_1 = require(\"./Guid\");\nvar RawWebsocketMessage = /** @class */ (function () {\n    function RawWebsocketMessage(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new Error_1.ArgumentNullError(\"payload\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (messageType === ConnectionMessage_1.MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n            throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === ConnectionMessage_1.MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : Guid_1.createNoDashGuid();\n    }\n    Object.defineProperty(RawWebsocketMessage.prototype, \"messageType\", {\n        get: function () {\n            return this.privMessageType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"payload\", {\n        get: function () {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return this.privPayload;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"textContent\", {\n        get: function () {\n            if (this.privMessageType === ConnectionMessage_1.MessageType.Binary) {\n                throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n            }\n            return this.privPayload;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"binaryContent\", {\n        get: function () {\n            if (this.privMessageType === ConnectionMessage_1.MessageType.Text) {\n                throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n            }\n            return this.privPayload;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"id\", {\n        get: function () {\n            return this.privId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RawWebsocketMessage;\n}());\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["src/common/RawWebsocketMessage.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,4DAA4D;AAC5D,kCAAkC;;;AAElC,yDAAkD;AAClD,iCAAmE;AACnE,+BAA0C;AAE1C;IAKI,6BAAmB,WAAwB,EAAE,OAAY,EAAE,EAAW;QAH9D,gBAAW,GAAQ,IAAI,CAAC;QAI5B,IAAI,CAAC,OAAO,EAAE;YACV,MAAM,IAAI,yBAAiB,CAAC,SAAS,CAAC,CAAC;SAC1C;QAED,sEAAsE;QACtE,IAAI,WAAW,KAAK,+BAAW,CAAC,MAAM,IAAI,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa,EAAE;YAC5F,MAAM,IAAI,6BAAqB,CAAC,6BAA6B,CAAC,CAAC;SAClE;QAED,IAAI,WAAW,KAAK,+BAAW,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;YACtE,MAAM,IAAI,6BAAqB,CAAC,0BAA0B,CAAC,CAAC;SAC/D;QAED,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,uBAAgB,EAAE,CAAC;IAC/C,CAAC;IAED,sBAAW,4CAAW;aAAtB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,wCAAO;aAAlB;YACI,+DAA+D;YAC/D,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAW,4CAAW;aAAtB;YACI,IAAI,IAAI,CAAC,eAAe,KAAK,+BAAW,CAAC,MAAM,EAAE;gBAC7C,MAAM,IAAI,6BAAqB,CAAC,kCAAkC,CAAC,CAAC;aACvE;YAED,OAAO,IAAI,CAAC,WAAqB,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAW,8CAAa;aAAxB;YACI,IAAI,IAAI,CAAC,eAAe,KAAK,+BAAW,CAAC,IAAI,EAAE;gBAC3C,MAAM,IAAI,6BAAqB,CAAC,gCAAgC,CAAC,CAAC;aACrE;YAED,OAAO,IAAI,CAAC,WAA0B,CAAC;QAC3C,CAAC;;;OAAA;IAED,sBAAW,mCAAE;aAAb;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IACL,0BAAC;AAAD,CApDA,AAoDC,IAAA;AApDY,kDAAmB","file":"RawWebsocketMessage.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload as ArrayBuffer;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n"]}},"error":null,"hash":"94a2d7085e2919a6f5f32af93f67fd4c","cacheData":{"env":{}}}