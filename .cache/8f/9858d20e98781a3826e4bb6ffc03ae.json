{"id":"../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js","dependencies":[{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js.map","includedInParent":true,"mtime":1733074701821},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/package.json","includedInParent":true,"mtime":1733076065657},{"name":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/package.json","includedInParent":true,"mtime":1733074701821},{"name":"../../common/Exports","loc":{"line":42,"column":24,"index":2714},"parent":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js","resolved":"/Users/amblardv5/Nextcloud/2024/dialogue-systems-1-2024/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js"}],"generated":{"js":"\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationRequestSession = void 0;\nvar Exports_1 = require(\"../../common/Exports\");\n/**\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\n * TODO: define what telemetry is required.\n */\nvar ConversationRequestSession = /** @class */ (function () {\n    function ConversationRequestSession(sessionId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privSessionId = sessionId;\n        this.privRequestId = Exports_1.createNoDashGuid();\n        this.privRequestCompletionDeferral = new Exports_1.Deferred();\n    }\n    Object.defineProperty(ConversationRequestSession.prototype, \"sessionId\", {\n        get: function () {\n            return this.privSessionId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationRequestSession.prototype, \"requestId\", {\n        get: function () {\n            return this.privRequestId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConversationRequestSession.prototype, \"completionPromise\", {\n        get: function () {\n            return this.privRequestCompletionDeferral.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ConversationRequestSession.prototype.onPreConnectionStart = function (authFetchEventId, connectionId) {\n        this.privSessionId = connectionId;\n    };\n    ConversationRequestSession.prototype.onAuthCompleted = function (isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    };\n    ConversationRequestSession.prototype.onConnectionEstablishCompleted = function (statusCode) {\n        if (statusCode === 200) {\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    };\n    ConversationRequestSession.prototype.onServiceTurnEndResponse = function (continuousRecognition) {\n        if (!continuousRecognition) {\n            this.onComplete();\n        }\n        else {\n            this.privRequestId = Exports_1.createNoDashGuid();\n        }\n    };\n    ConversationRequestSession.prototype.dispose = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, detachable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!this.privIsDisposed) return [3 /*break*/, 4];\n                        // we should have completed by now. If we did not its an unknown error.\n                        this.privIsDisposed = true;\n                        _i = 0, _a = this.privDetachables;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        detachable = _a[_i];\n                        return [4 /*yield*/, detachable.detach()];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ConversationRequestSession.prototype.onComplete = function () {\n        //\n    };\n    return ConversationRequestSession;\n}());\nexports.ConversationRequestSession = ConversationRequestSession;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["src/common.speech/Transcription/ConversationRequestSession.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElC,gDAI8B;AAE9B;;;GAGG;AACH;IAOI,oCAAmB,SAAiB;QAN5B,mBAAc,GAAY,KAAK,CAAC;QAChC,oBAAe,GAAkB,IAAI,KAAK,EAAe,CAAC;QAM9D,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,0BAAgB,EAAE,CAAC;QACxC,IAAI,CAAC,6BAA6B,GAAG,IAAI,kBAAQ,EAAQ,CAAC;IAC9D,CAAC;IAED,sBAAW,iDAAS;aAApB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,iDAAS;aAApB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,yDAAiB;aAA5B;YACI,OAAO,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC;QACtD,CAAC;;;OAAA;IAEM,yDAAoB,GAA3B,UAA4B,gBAAwB,EAAE,YAAoB;QACtE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAEM,oDAAe,GAAtB,UAAuB,OAAgB;QACnC,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAEM,mEAA8B,GAArC,UAAsC,UAAkB;QACpD,IAAI,UAAU,KAAK,GAAG,EAAE;YACpB,OAAO;SACV;aAAM,IAAI,UAAU,KAAK,GAAG,EAAE;YAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAEM,6DAAwB,GAA/B,UAAgC,qBAA8B;QAC1D,IAAI,CAAC,qBAAqB,EAAE;YACxB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;aAAM;YACH,IAAI,CAAC,aAAa,GAAG,0BAAgB,EAAE,CAAC;SAC3C;IACL,CAAC;IAEY,4CAAO,GAApB;;;;;;6BACQ,CAAC,IAAI,CAAC,cAAc,EAApB,wBAAoB;wBACpB,uEAAuE;wBACvE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;8BACkB,EAApB,KAAA,IAAI,CAAC,eAAe;;;6BAApB,CAAA,cAAoB,CAAA;wBAAlC,UAAU;wBACjB,qBAAM,UAAU,CAAC,MAAM,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;;;wBADL,IAAoB,CAAA;;;;;;KAIpD;IAEO,+CAAU,GAAlB;QACI,EAAE;IACN,CAAC;IAEL,iCAAC;AAAD,CAjEA,AAiEC,IAAA;AAjEY,gEAA0B","file":"ConversationRequestSession.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IDetachable,\r\n} from \"../../common/Exports\";\r\n\r\n/**\r\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\r\n * TODO: define what telemetry is required.\r\n */\r\nexport class ConversationRequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privRequestCompletionDeferral: Deferred<void>;\r\n    private privSessionId: string;\r\n\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRequestCompletionDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get completionPromise(): Promise<void> {\r\n        return this.privRequestCompletionDeferral.promise;\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string, connectionId: string): void {\r\n        this.privSessionId = connectionId;\r\n    }\r\n\r\n    public onAuthCompleted(isError: boolean): void {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted(statusCode: number): void {\r\n        if (statusCode === 200) {\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnEndResponse(continuousRecognition: boolean): void {\r\n        if (!continuousRecognition) {\r\n            this.onComplete();\r\n        } else {\r\n            this.privRequestId = createNoDashGuid();\r\n        }\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete(): void {\r\n        //\r\n    }\r\n\r\n}\r\n"]}},"error":null,"hash":"21e9ab75e48774f00005740607880c38","cacheData":{"env":{}}}